#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

#
# Read Lam configuration
#

import os
import sys
import json
import agent
from agent.ldapproxy import Ldapproxy

# Prepare return variable
config = {}

config["host"] =  os.environ.get("TRAEFIK_HOST")
config["http2https"] =  os.environ.get("TRAEFIK_HTTP2HTTPS") == "True"
config["lets_encrypt"] =  os.environ.get("TRAEFIK_LETS_ENCRYPT") == "True"
# retrieve LDAP domains list
lp = Ldapproxy()
domains = []
for key in lp.get_domains_list():
    domains.append({
        "name": key,
        "label": key,
        "value": key,
    })

config['ldap_domain_list'] = domains
config['ldap_domain'] = os.environ.get("LDAP_DOMAIN",'')
config['ldap_admin_users'] = os.environ.get("LDAP_ADMIN_USERS",'administrator')

# Function to check if a specific value exists in a file
def check_value_in_file(file_path, value):
    with open(file_path, 'r') as file:
        content = file.read()
        if value in content:
            return True
    return False

# Paths to the configuration files
config_cfg_path = './lam-config/config.cfg'
lam_conf_path = './lam-config/lam.conf'

# Values to search for
values_to_search = ['og9MdeYRopbiWGb+jY+q58rZcIk=', '3irB6JbX8hrfOE9Bv0kC8MhB7p8=']

# Check each file for the values
found_in_config_cfg = any(check_value_in_file(config_cfg_path, value) for value in values_to_search)
found_in_lam_conf = any(check_value_in_file(lam_conf_path, value) for value in values_to_search)

# Set a flag based on whether the values were found
config['is_default_password'] = True if found_in_config_cfg or found_in_lam_conf else False

# Dump the configuratio to stdou
json.dump(config, fp=sys.stdout)
