#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

#
# Read Lam configuration
#

import os
import sys
import json
import agent
from agent.ldapproxy import Ldapproxy
import subprocess

# Prepare return variable
config = {}

config["host"] =  os.environ.get("TRAEFIK_HOST")
config["http2https"] =  os.environ.get("TRAEFIK_HTTP2HTTPS") == "True"
config["lets_encrypt"] =  os.environ.get("TRAEFIK_LETS_ENCRYPT") == "True"
# retrieve LDAP domains list
lp = Ldapproxy()
domains = []
for key in lp.get_domains_list():
    domains.append({
        "name": key,
        "label": key,
        "value": key,
    })

config['ldap_domain_list'] = domains
config['ldap_domain'] = os.environ.get("LDAP_DOMAIN",'')
config['ldap_admin_users'] = os.environ.get("LDAP_ADMIN_USERS",'administrator')

try:
    # Function to execute podman command and capture output
    def execute_podman_command(command):
        result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
        return result.stdout

    # Execute podman commands to get the content of the files
    lam_conf_content = execute_podman_command("podman exec lam cat /var/lib/ldap-account-manager/config/lam.conf")
    config_cfg_content = execute_podman_command("podman exec lam cat /etc/ldap-account-manager/config.cfg")

    # Values to search for
    values_to_search = ['og9MdeYRopbiWGb+jY+q58rZcIk=', '3irB6JbX8hrfOE9Bv0kC8MhB7p8=']

    # Function to check if any value in values_to_search is present in the content
    def check_values_in_content(content):
        for value in values_to_search:
            if value in content:
                return True
        return False

    # Set a flag based on whether the values were found
    config['is_default_password'] = True if check_values_in_content(lam_conf_content) or check_values_in_content(config_cfg_content) else False
except:
    config['is_default_password'] = False

# Dump the configuratio to stdou
json.dump(config, fp=sys.stdout)
