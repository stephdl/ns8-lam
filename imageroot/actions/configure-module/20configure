#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import json
import sys
import agent

data = json.load(sys.stdin)

# Setup default values
ldap_admin_users = data.get("ldap_admin_users", "") # semicolon (;) list separated
ldap_domain = data.get("ldap_domain", "")
lam_login_method = data.get("lam_login_method", "list") # list or search
# bind user to the domain
if ldap_domain:
    agent.bind_user_domains([ldap_domain])
else:
    agent.bind_user_domains([])
if ldap_domain != os.environ.get("LDAP_DOMAIN", ""):
    # remove the file lam-config/lam.conf
    # we write one time a template and after the web application will manage it
    file_path = "lam-config/lam.conf"
    # check if file exists then remove it
    if os.path.isfile(file_path):
        # when the service stop we write the file to lam-config/lam.conf
        agent.run_helper('systemctl', '--user', 'stop', 'lam').check_returncode()
        os.remove(file_path)
        # remove the general config file (service start build it again)
        os.remove("lam-config/config.cfg")
# Setup LDAP domain
agent.set_env("LDAP_DOMAIN", ldap_domain)
# Setup LAM user
agent.set_env("LDAP_ADMIN_USERS", ldap_admin_users)
# Setup LAM login metho
agent.set_env("LAM_LOGIN_METHOD", lam_login_method)
